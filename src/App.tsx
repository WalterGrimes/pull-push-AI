// src/App.tsx

import React, { useState, useMemo } from "react";
import { PoseCamera } from "./components/PoseCamera";
import "./App.css";
import PushUpTracker from "./components/PushUpTracker";
import PullUpTracker from "./components/PullUpTracker";
import type { Results } from '@mediapipe/pose';
import TurnCamera from "./components/TurnCamera";
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
import { VideoFileProcessor } from "./components/VideoFileProcessor";

function App() {
    const [mode, setMode] = useState<"pushup" | "pullup">("pushup");
    const [poseResults, setPoseResults] = useState<Results | null>(null);
    const [isCameraOn, setIsCameraOn] = useState(false);
    const [videoFile, setVideoFile] = useState<File | null>(null);
    const [processingMode, setProcessingMode] = useState<"live" | "upload">("live");

    const toggleIsCamera = () => {
        setIsCameraOn(prev => !prev);
        setVideoFile(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞ –∫–∞–º–µ—Ä—É
        setProcessingMode("live");
    }

    const handleVideoUpload = (e: React.ChangeEvent<HTMLInputElement>) => {
        const file = e.target.files?.[0];
        if (!file) return;

        setVideoFile(file);
        setIsCameraOn(true); // –í–∫–ª—é—á–∞–µ–º "–∫–∞–º–µ—Ä—É", —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –æ–±–ª–∞—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏
        setProcessingMode("upload");
    }

    // –û—Å—Ç–∞–≤–ª—è–µ–º useMemo –¥–ª—è —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥–∞
    const handleResults = useMemo(() => {
        let lastProcessed = 0;
        return (results: Results) => {
            const now = Date.now();
            if (now - lastProcessed < 100) return; // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ ~10 FPS
            lastProcessed = now;
            setPoseResults(results);
        };
    }, []);

    return (
        <div className="app-container">
            <header className="app-header">
                <h1>Pull-Push</h1>
                <div className="mode-selector">
                    {/* ... –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ ... */}
                    <button
                        className={mode === "pushup" ? "active" : ""}
                        onClick={() => setMode("pushup")}
                    >
                        –û—Ç–∂–∏–º–∞–Ω–∏—è
                    </button>
                    <button
                        className={mode === "pullup" ? "active" : ""}
                        onClick={() => setMode("pullup")}
                    >
                        –ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è
                    </button>
                </div>
            </header>

            <div className="camera-container">
                {isCameraOn && (
                    <>
                        {processingMode === "live" ? (
                            <PoseCamera onResults={handleResults} />
                        ) : (
                            videoFile && <VideoFileProcessor videoFile={videoFile} onResults={handleResults} />
                        )}

                        {/* –¢—Ä–µ–∫–µ—Ä—ã */}
                        {mode === "pushup" && <PushUpTracker results={poseResults} />}
                        {mode === "pullup" && <PullUpTracker results={poseResults} />}

                        {/* üö™ –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
                        <button
                            onClick={() => {
                                setIsCameraOn(false);
                                setVideoFile(null);
                                setPoseResults(null);
                            }}
                            style={{
                                marginTop: "12px",
                                backgroundColor: "#444",
                                color: "#fff",
                                padding: "10px 16px",
                                borderRadius: "8px",
                                border: "none",
                                cursor: "pointer"
                            }}
                        >
                            –í—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –∞–Ω–∞–ª–∏–∑–∞
                        </button>
                    </>
                )}

            </div>

            <div className="camera-controls">
                <TurnCamera
                    isCameraOn={isCameraOn}
                    toggleCamera={toggleIsCamera}
                    handleVideoUpload={handleVideoUpload}
                />
            </div>

            <div className="instructions">
                <h3>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</h3>
                <ul>
                    <li>–í—Å—Ç–∞–Ω—å—Ç–µ –ø–µ—Ä–µ–¥ –∫–∞–º–µ—Ä–æ–π –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ 2-3 –º–µ—Ç—Ä–æ–≤</li>
                    <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—Å —Ö–æ—Ä–æ—à–æ –≤–∏–¥–Ω–æ –≤ –ø–æ–ª–Ω—ã–π —Ä–æ—Å—Ç</li>
                    <li>–î–ª—è –æ—Ç–∂–∏–º–∞–Ω–∏–π: –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –¥–≤–∏–∂–µ–Ω–∏—è –≤ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π –ø–ª–æ—Å–∫–æ—Å—Ç–∏</li>
                    <li>–î–ª—è –ø–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏–π:
                        <ul>
                            <li>–ü–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã–ø—Ä—è–º–ª—è–π—Ç–µ —Ä—É–∫–∏ –≤ –Ω–∏–∂–Ω–µ–π —Ç–æ—á–∫–µ</li>
                            <li>–ü–æ–¥—Ç—è–≥–∏–≤–∞–π—Ç–µ—Å—å –≥—Ä—É–¥—å—é –∫ –ø–µ—Ä–µ–∫–ª–∞–¥–∏–Ω–µ</li>
                            <li>–î–µ—Ä–∂–∏—Ç–µ –∫–æ—Ä–ø—É—Å —Ä–æ–≤–Ω–æ, –Ω–µ —Ä–∞—Å–∫–∞—á–∏–≤–∞–π—Ç–µ—Å—å</li>
                        </ul>
                    </li>
                    <li>–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—á–∏—Ç–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è</li>
                </ul>
            </div>
        </div>
    );
}

export default App;




